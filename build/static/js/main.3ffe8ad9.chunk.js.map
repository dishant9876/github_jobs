{"version":3,"sources":["useFetchJobs.js","Toggle.js","globalStyles.js","Job.js","JobsPagination.js","SearchForm.js","App.js","useDarkMode.js","reportWebVitals.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Sun","Moon","styled","svg","Toggle","theme","toggleTheme","console","log","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","d","cx","cy","r","x1","y1","x2","y2","GlobalStyles","createGlobalStyle","body","text","lightTheme","darkTheme","Job","job","useState","open","setOpen","Card","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","pill","variant","location","style","wordBreak","source","how_to_apply","alt","src","company_logo","Text","Button","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setTheme","useDarkMode","themeMode","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","responseType","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ffe8ad9.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\nconst BASE_URL = 'https://mycorsproxyserver.herokuapp.com/https://jobs.github.com/positions.json'\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] }\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs }\r\n    case ACTIONS.ERROR:\r\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return {...state, hasNextPage: action.payload.hasNextPage}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function useFetchJobs(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source()\r\n    \r\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n      axios.get(BASE_URL, {\r\n        responseType: 'json',\r\n      cancelToken: cancelToken1.token,\r\n      params: { markdown: true, page: page, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \r\n    }).catch(e => {\r\n      if(axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n\r\n    const cancelToken2 = axios.CancelToken.source()\r\n    axios.get(BASE_URL, {\r\n      responseType: 'json',\r\n      cancelToken: cancelToken2.token,\r\n      params: { markdown: true, page: page + 1, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \r\n    }).catch(e => {\r\n      if(axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n    return () => {\r\n      cancelToken1.cancel()\r\n      cancelToken2.cancel()\r\n    }\r\n\r\n    }, [params, page])\r\n  \r\n  return state\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nlet Sun,Moon;\r\n\r\nSun = Moon = styled.svg`\r\n    position: absolute;\r\n    top: 2rem;\r\n    right: 0.5rem;\r\n`;\r\n\r\nexport const Toggle = ({theme,toggleTheme}) => {\r\n    console.log(theme);\r\n    return (\r\n        <div onClick={toggleTheme}>\r\n            { theme === 'light' ? <Moon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\"\r\n            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#212121\" strokeWidth=\"2\"\r\n            strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-moon\"><path\r\n            d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></Moon>\r\n            :\r\n            <Sun xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\"\r\n            fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\" className=\"feather feather-sun\"><circle cx=\"12\" cy=\"12\"\r\n            r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\"\r\n            x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line \r\n            x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" \r\n            y2=\"12\"></line> <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" \r\n            x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></\r\n            line></Sun> }\r\n        </div>\r\n    )\r\n}\r\n","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body {\r\n        background: ${({ theme }) => theme.body};\r\n        color: ${({ theme }) => theme.text};\r\n        transition: all .5s linear\r\n    }\r\n`;\r\n\r\nexport const lightTheme = {\r\n    body: 'light gray',\r\n    text: '#121212'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#121212',\r\n    text: 'light gray'\r\n};","import React, { useState } from 'react'\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function Job({ job }) {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <div>\r\n            <Card className=\"mb-3\">\r\n                <Card.Body>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <Card.Title>\r\n                                {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"text-muted mb-2\">\r\n                                {new Date(job.created_at).toLocaleDateString()}\r\n                            </Card.Subtitle>\r\n                            <Badge pill variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n                            <Badge pill variant=\"secondary\">{job.location}</Badge>\r\n                            <div style={{ wordBreak: 'break-all '}}>\r\n                                <ReactMarkdown source={job.how_to_apply} />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\r\n                    </div>\r\n                    <Card.Text>\r\n                        <Button onClick={() => setOpen(prevOpen => !prevOpen)} variant=\"primary\">{open ? 'Hide Details' : 'View Details'}</Button>\r\n                    </Card.Text>\r\n                    <Collapse in={open}>\r\n                        <div className=\"mt-4\">\r\n                            <ReactMarkdown source={job.description} />\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nfunction JobsPagination({ page , setPage, hasNextPage }) {\r\n    function adjustPage(amount) {\r\n        setPage(prevPage => prevPage + amount)\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            {page !==1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n            {page !==1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n            {page > 2 && <Pagination.Ellipsis />}\r\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default JobsPagination\r\n","import React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nfunction SearchForm({params,onParamChange}) {\r\n    return (\r\n        <Form className=\"mb-4\">\r\n            <Form.Row className=\"align-items-end\">\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n                    <Form.Check onChange={onParamChange} value={params.full_time} name= \"full_time\" id = \"full_time\" label = \"Only Full Time\" className = \"mb-2\" />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport {useDarkMode} from './useDarkMode';\nimport {Toggle} from './Toggle';\nimport {GlobalStyles, lightTheme, darkTheme} from './globalStyles';\nimport {ThemeProvider} from 'styled-components';\nimport Job from './Job'\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\n\nfunction App() {\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return{ ...prevParams, [param]: value}\n    })\n  }\n  \n  return (\n    <ThemeProvider theme={themeMode}>\n      <Container className=\"my-5\">\n        <GlobalStyles />\n        <Toggle theme={theme} toggleTheme={toggleTheme} />\n        <center><h1 className=\"mb-4\">Github Jobs</h1></center>\n        <SearchForm params = {params} onParamChange={handleParamChange} />\n        <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n        {loading && <h1>Loading...</h1>}\n        {error && <h1>Error. Try refreshing.</h1>}\n        {jobs.map(job => {\n          return <Job key={job.id} job={job} />\n        })}\n        <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","import {useState} from 'react'\r\n\r\nexport const useDarkMode = () => {\r\n    const[theme,setTheme] = useState('dark');\r\n    const toggleTheme = () => {\r\n        theme === 'dark' ? setTheme('light') : setTheme('dark')\r\n    }\r\n    return [theme, toggleTheme]\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}